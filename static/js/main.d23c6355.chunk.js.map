{"version":3,"sources":["components/Card.js","components/AddCard.js","App.js","reportWebVitals.js","index.js"],"names":["CardItem","disabled","change","click","isAdded","value","important","isDone","onChange","style","color","className","type","onClick","id","Card","date","useState","renderComponent","setRenderComponent","showDate","tasksAmount","setTasksAmount","name","item","setItem","TaskDate","handleChange","index","e","newArr","target","length","filter","x","handleClick","action","Arr","cardItems","map","div","currentTarget","closest","opacity","transition","setTimeout","AddCard","actualDate","Date","toISOString","split","cardAmount","AddCardAmount","newDate","newDateChange","min","prevstate","Array","fill","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d23c6355.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport '../css/Card.css';\r\nimport { FiCheck } from \"react-icons/fi\";\r\nimport { FiX } from \"react-icons/fi\";\r\n\r\nconst CardItem = ({ disabled, change, click,isAdded, value,important, isDone})=>{\r\n\r\n    return(\r\n        <label>\r\n        <input \r\n        value={value}\r\n        disabled={disabled} \r\n        onChange={change}\r\n        style={important? {color:\"red\"}:null}\r\n        className={isDone? \"isDone\" :null}\r\n        type=\"text\"\r\n        />\r\n        {isAdded ?<>\r\n        <div className=\"buttonWrapper\">\r\n            <button onClick={click} id={\"!\"}>!</button>\r\n            <button onClick={click} ><FiCheck id={\"V\"}/></button>\r\n            <button onClick={click}><FiX id={\"X\"}/></button>\r\n        </div>\r\n        </>:null}\r\n        \r\n        </label>\r\n    )\r\n}\r\n\r\nconst Card = ({date}) => {\r\n    const [renderComponent,setRenderComponent]=useState(true);\r\n    const [showDate]=useState(date);\r\n    const [tasksAmount, setTasksAmount]=useState(\"0\");\r\n    const [item,setItem] = useState([\r\n     {\r\n        id: 1,\r\n        name: \"\",\r\n        value: \"\",\r\n        disabled: false,\r\n        isAdded:false,\r\n        important:false,\r\n        isDone:false,\r\n     },\r\n     {\r\n        id: 2,\r\n        name: \"\",\r\n        value: \"\",\r\n        disabled: false,\r\n        isAdded:false,\r\n        important:false,\r\n        isDone:false,\r\n     },\r\n     {\r\n        id: 3,\r\n        name: \"\",\r\n        value: \"\",\r\n        disabled: false,\r\n        isAdded:false,\r\n        important:false,\r\n        isDone:false,\r\n     },\r\n     {\r\n        id: 4,\r\n        name: \"\",\r\n        value: \"\",\r\n        disabled: false,\r\n        isAdded:false,\r\n        important:false,\r\n        isDone:false,\r\n     },\r\n    \r\n        \r\n    ]);\r\n    const TaskDate = ({date})=>{\r\n   \r\n        return(\r\n        <p>{showDate}</p>\r\n        )\r\n    }\r\n    const handleChange=index=>e=>{\r\n        let newArr = [...item];\r\n        newArr[index].value=e.target.value;\r\n        newArr[index].isAdded=true;\r\n        if(e.target.value.length===0){\r\n            newArr[index].isAdded=false;\r\n        }\r\n        setTasksAmount(item.filter(x=> x.value && !x.isDone).length)\r\n        setItem(newArr);\r\n        \r\n    }\r\n    const handleClick=index=>e=>{ \r\n        const action = e.target.id;\r\n        let newArr = [...item];\r\n        const Arr=newArr[index];\r\n        if(action==='!'){\r\n            Arr.important=!Arr.important;\r\n        }else if(action==='V'){\r\n            Arr.isDone=!Arr.isDone;\r\n            Arr.disabled=!Arr.disabled;\r\n        }else if(action==='X'){\r\n            Arr.value=\"\";\r\n            Arr.isAdded=false;\r\n            Arr.important=false;\r\n            Arr.isDone=false;\r\n            Arr.disabled=false;\r\n        }\r\n        setTasksAmount(item.filter(x=> x.value && !x.isDone).length)\r\n        setItem(newArr);\r\n    }\r\n    const handleAddLineTask=()=>{\r\n        setItem([...item,[{\r\n            id: item[item.length] +1,\r\n            name: \"\",\r\n            value: \"\",\r\n            disabled: false,\r\n            isAdded:false,\r\n            isDone:false,\r\n            important:false,\r\n        }]])\r\n    }\r\n\r\n    const handleDeleteCard = (e)=>{\r\n        const div = e.currentTarget.closest(\"div\");\r\n        \r\n        div.style.opacity=\"0\";\r\n        div.style.transition = \"all 0.5s\";\r\n       setTimeout(\r\n       ()=>{ \r\n        setRenderComponent(false)},500);\r\n    }\r\n    let cardItems = item.map((x,index) =>( \r\n    <CardItem \r\n        key={x.id}\r\n        id={x.id}\r\n        value={x.value}\r\n        disabled={x.disabled}\r\n        isAdded={x.isAdded}\r\n        isDone={x.isDone}\r\n        important={x.important}\r\n        change={handleChange(index)}\r\n        click={handleClick(index)}\r\n    />\r\n   ));\r\n    \r\n    \r\n    if(renderComponent){\r\n    return (\r\n        \r\n        <div className={renderComponent? \"card card-active\" : \"card card-hide\"}>\r\n            <button className={\"closeCard\"} onClick={handleDeleteCard}><FiX/></button>\r\n            <h2><TaskDate date={showDate}/></h2>\r\n          {cardItems}\r\n         \r\n            <button className={\"taskButton\"} onClick={handleAddLineTask}>+</button>\r\n        \r\n            <p>{tasksAmount===0 ? \"Wszystko dzis zrobiles!\" :<>Zadania do zrobienia: {tasksAmount}</>}</p>\r\n        </div>\r\n    )}else{\r\n        return null;\r\n    }\r\n};\r\n\r\nexport default Card;","import React, {useState} from 'react';\r\nimport Card from './Card'\r\n\r\nconst AddCard = () => {\r\n    const actualDate = new Date().toISOString().split('T')[0];\r\n    \r\n    const [cardAmount, AddCardAmount]=useState(0);\r\n    const [newDate, newDateChange]=useState(actualDate);\r\n\r\n    const HandleAddCard=()=>{\r\n        if(newDate>=actualDate)\r\n        AddCardAmount((prevstate)=>prevstate+1);\r\n        \r\n    }\r\n    const HandleNewDateChange=(e)=>{\r\n        newDateChange(e.target.value);\r\n        \r\n    }\r\n    \r\n    return (\r\n\r\n        <>\r\n        <header>\r\n            <input type=\"date\" min={actualDate}  value={newDate} onChange={HandleNewDateChange} />\r\n            <button onClick={HandleAddCard}>Dodaj KartÄ™</button>\r\n        </header>\r\n        <div className=\"Cards\">\r\n        {Array(cardAmount).fill(<Card date={newDate}/>)}\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddCard;","import './App.css';\nimport AddCard from './components/AddCard'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <AddCard/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}